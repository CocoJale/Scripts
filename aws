local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Tab1 = Library:NewWindow("AWS")
local Tab1Section1 = Tab1:NewSection("Tab1")

local champLoop, tpLoop, auraLoop

Tab1Section1:CreateToggle("Trial W13", function(value)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local Knit = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")

    if value then
        tpLoop = task.spawn(function()
            local player = Players.LocalPlayer
            while true do
                local char = player.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    char.HumanoidRootPart.CFrame = CFrame.new(2925, 11.5, 536)
                end
                task.wait()
            end
        end)

        champLoop = task.spawn(function()
            local remote = Knit:WaitForChild("Services"):WaitForChild("ChampionshipService")
                :WaitForChild("RF"):WaitForChild("RequestJoin")
            local args = { "Medieval" }
            while true do
                remote:InvokeServer(unpack(args))
                task.wait(1.1)
            end
        end)
    else
        if champLoop then task.cancel(champLoop) end
        if tpLoop then task.cancel(tpLoop) end
    end
end)

Tab1Section1:CreateToggle("Aura Roll", function(value)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Knit = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")

    if value then
        auraLoop = task.spawn(function()
            local remote = Knit:WaitForChild("Services"):WaitForChild("AuraService")
                :WaitForChild("RF"):WaitForChild("Roll")
            while true do
                remote:InvokeServer()
                task.wait(0.1)
            end
        end)
    else
        if auraLoop then task.cancel(auraLoop) end
    end
end)
