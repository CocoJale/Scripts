local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Tab1 = Library:NewWindow("Pull A Sword")
local Tab1Section1 = Tab1:NewSection("Main Game")
local Tab2Section2 = Tab1:NewSection("Squid Minigames")

local RS, Players, WS = game:GetService("ReplicatedStorage"), game:GetService("Players"), workspace
local Remotes, Events = RS:WaitForChild("Remotes"), RS.Remotes:WaitForChild("Events")

local generateEnabled = false

local function createToggle(name, eventPath)
    local enabled = false
    Tab1Section1:CreateToggle(name, function(val)
        enabled = val
        if not val then return end
        task.spawn(function()
            local target = Events
            for _, part in ipairs(eventPath) do
                target = target:WaitForChild(part)
            end
            while enabled do
                target:FireServer()
                task.wait()
            end
        end)
    end)
end

createToggle("Auto Dungeon Click", {"Dungeon", "OnDungeonClick"})
createToggle("Auto Click Event", {"ClickEvent"})

Tab1Section1:CreateToggle("Generate (LazyFish/BossBot)", function(val)
    generateEnabled = val
    if val then
        Events:WaitForChild("RemoveC"):FireServer(1)
        task.wait(0.5)
        task.spawn(function()
            while generateEnabled do
                local event = Events:WaitForChild("WinMegaBossEvent")
                for i = 1, 10 do
                    event:FireServer("Dragon6", "Chaos")
                    task.wait()
                end
            end
        end)
    else
        Events:WaitForChild("RemoveC"):FireServer(0)
    end
end)

local autoSquidGameEnabled = false
local originalPositions = {}

Tab2Section2:CreateToggle("Auto SquidGame", function(val)
    autoSquidGameEnabled = val

    local p = Players.LocalPlayer
    local c = p.Character or p.CharacterAdded:Wait()
    local r, h = c:WaitForChild("HumanoidRootPart"), c:FindFirstChildOfClass("Humanoid")
    local rem = Events:WaitForChild("SquidGame"):WaitForChild("RemoteEvent")

    if val then
        if h then h.JumpHeight = 0.001 end
        for _, part in ipairs(c:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        -- Clear old saved positions just in case
        originalPositions = {}

        local squidParts = {}
        for _, v in ipairs(WS:GetDescendants()) do
            if (v.Name == "Wall" or v.Name == "WinHitbox") and v:IsA("BasePart") then
                v.CanCollide = false
                table.insert(squidParts, v)
                originalPositions[v] = v.CFrame -- save original position
            end
        end

        task.spawn(function()
            while autoSquidGameEnabled do
                rem:FireServer("Accepted")
                task.wait(5)
            end
        end)

        task.spawn(function()
            while autoSquidGameEnabled do
                for _, v in ipairs(squidParts) do
                    if v and v:IsA("BasePart") then
                        v.CFrame = r.CFrame
                    end
                end

                if h then
                    h.Jump = true
                    task.wait(0.1)
                    h.Jump = false
                end

                task.wait(1)

                for _, v in ipairs(squidParts) do
                    if v and v:IsA("BasePart") then
                        v.CFrame = r.CFrame * CFrame.new(0, 1000, 0)
                    end
                end
                task.wait(1)

                for _, v in ipairs(squidParts) do
                    if v and v:IsA("BasePart") then
                        v.CFrame = r.CFrame
                    end
                end
                task.wait(1)
            end
        end)
    else
        -- On disable: restore parts and reset properties
        for part, origCFrame in pairs(originalPositions) do
            if part and part:IsA("BasePart") then
                part.CFrame = origCFrame
                part.CanCollide = true
            end
        end
        originalPositions = {}

        if h then
            h.JumpHeight = 7.2 -- Default jump height; adjust if different
        end
    end
end)
