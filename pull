local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local Tab1 = Library:NewWindow("Pull A Sword")
local Tab1Section1 = Tab1:NewSection("Main Game")
local Tab2Section2 = Tab1:NewSection("Squid Minigames")


local autoDungeonClickEnabled = false
local autoClickEventEnabled = false
local fireDelay = 0.001
local running = false
local teleportTask, eventTask, noclipTask

Tab1Section1:CreateToggle("Auto Dungeon Click", function(value)
    autoDungeonClickEnabled = value
    if autoDungeonClickEnabled then
        task.spawn(function()
            while autoDungeonClickEnabled do
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local Remotes = ReplicatedStorage:WaitForChild("Remotes")
                local Events = Remotes:WaitForChild("Events")

                Events:WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
                task.wait(fireDelay)
            end
        end)
    end
end)

Tab1Section1:CreateToggle("Dungeon Click V2", function(value)
    local running = value
    if running then
        task.spawn(function()
            while running do
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local Remotes = ReplicatedStorage:WaitForChild("Remotes")
                local Events = Remotes:WaitForChild("Events")

                for i = 1, 5 do
                    Events:WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
                end
                task.wait()
            end
        end)
    end
end)

Tab1Section1:CreateToggle("Auto Click Event", function(value)
    autoClickEventEnabled = value
    if autoClickEventEnabled then
        task.spawn(function()
            while autoClickEventEnabled do
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local Remotes = ReplicatedStorage:WaitForChild("Remotes")
                local Events = Remotes:WaitForChild("Events")

                Events:WaitForChild("ClickEvent"):FireServer()
                task.wait()
            end
        end)
    end
end)

-- NEW TOGGLE: Dragon6
Tab1Section1:CreateToggle("Generate (LazyFish/BossBot)", function(value)
    _G.AutoWinDragon6 = value
    if _G.AutoWinDragon6 then
        task.spawn(function()
            while _G.AutoWinDragon6 do
                for i = 1, 10 do
                    local args = {
                        "Dragon6",
                        "Chaos"
                    }
                    game:GetService("ReplicatedStorage")
                        :WaitForChild("Remotes")
                        :WaitForChild("Events")
                        :WaitForChild("WinMegaBossEvent")
                        :FireServer(unpack(args))
                    task.wait()
                end
            end
        end)
    end
end)

Tab1Section1:CreateButton("Generate anywhere", function()
    local args = {
    1
}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(unpack(args))
end)

Tab1Section1:CreateTextbox("Train/Attack Delay", function(text)
    local num = tonumber(text)
    if num and num > 0 then
        fireDelay = num
    end
end)

Tab1Section1:CreateTextbox("Set WalkSpeed", function(text)
    local num = tonumber(text)
    if num then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = num
        end
    end
end)

Tab1Section1:CreateTextbox("Set HipHeight", function(text)
    local num = tonumber(text)
    if num then
        local player = game.Players.LocalPlayer
        local humanoid = player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
        if humanoid then
            humanoid.HipHeight = num
        end
    end
end)

Tab2Section2:CreateToggle("Win Minigames", function(value)
    running = value
    
    -- If toggled off, cancel all tasks by setting running false
    if not running then
        teleportTask = nil
        eventTask = nil
        noclipTask = nil
        return
    end

    local p = game.Players.LocalPlayer
    if not p then return end
    local rs = game.ReplicatedStorage.Remotes.Events.SquidGame.RemoteEvent
    local function getRoot(c) return c and c:FindFirstChild("HumanoidRootPart") end

    teleportTask = task.spawn(function()
        while running do
            local root = getRoot(p.Character)
            if root then
                for _, part in pairs(workspace:GetDescendants()) do
                    if part:IsA("BasePart") and (part.Name == "WinHitbox" or part.Name == "Wall") then
                        part.CFrame = root.CFrame * CFrame.new(0, 200, 0)
                        task.wait(0.1)
                        part.CFrame = root.CFrame
                        part.CanCollide = true
                    end
                end
            end
            task.wait(0.1)
        end
    end)

    eventTask = task.spawn(function()
        while running do
            rs:FireServer("Accepted")
            task.wait(2)
        end
    end)

    noclipTask = task.spawn(function()
        while running do
            local character = p.Character
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        if part.Name == "WinHitbox" or part.Name == "Wall" then
                            part.CanCollide = true
                        else
                            part.CanCollide = false
                        end
                    end
                end
            end
            task.wait(0.1)
        end
    end)
end)
