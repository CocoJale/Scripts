-- Load library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/liebertsx/Tora-Library/main/src/librarynew",true))()

--------------------------------------------------
-- MAIN WINDOW
--------------------------------------------------
local mainTab = library:CreateWindow("PAS - HUB")

local mainGame = mainTab:AddFolder("Main Game")
local bossTab  = mainTab:AddFolder("Bosses")
local worldTab = mainTab:AddFolder("Worlds/Secret Worlds")

mainTab:AddLabel({ text = "Creator = Not me", type = "label" })

--------------------------------------------------
-- HERALD EVENT WINDOW
--------------------------------------------------
local heraldWindow = library:CreateWindow("Underworld Event")
local eventTab     = heraldWindow:AddFolder("Event")

--------------------------------------------------
-- MAIN GAME
--------------------------------------------------
mainGame:AddToggle({
    text = "Auto Click",
    flag = "AutoClick",
    callback = function(state)
        if state then
            task.spawn(function()
                while library.flags["AutoClick"] do
                    game.ReplicatedStorage.Remotes.Events.ClickEvent:FireServer()
                    task.wait()
                end
            end)
        end
    end
})

local eggList = {
    "W1E1","W2E1","W3E1","W4E1","W5E1","W6E1","W7E1","W8E1","W9E1","W10E1",
    "W11E1","W12E1","W13E1","W14E1","W15E1","W16E1","W17E1","W18E1","W19E1","W20E1",
    "W21E1","W22E1","W23E1","W24E1","W25E1","W26E1","W27E1","W28E1","W29E1","W30E1",
    "W31E1","W32E1","W33E1","W34E1","W35E1","Common Egg"
}

mainGame:AddToggle({
    text = "Hatch Nearest",
    flag = "HatchNearest",
    callback = function(state)
        if state then
            task.spawn(function()
                while library.flags["HatchNearest"] do
                    for _, egg in ipairs(eggList) do
                        game.ReplicatedStorage.GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(egg,"Buy1")
                    end
                    task.wait(0.3)
                end
            end)
        end
    end
})

mainGame:AddToggle({
    text = "Auto Spin Wheel",
    flag = "AutoSpinWheel",
    callback = function(state)
        if state then
            task.spawn(function()
                while library.flags["AutoSpinWheel"] do
                    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent.SpaceEggEvent:FireServer()
                    task.wait(20)
                end
            end)
        end
    end
})

-- PvP Auto
local function getPlayerNames()
    local t = {}
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        table.insert(t, player.Name)
    end
    return t
end
local playerNames = getPlayerNames()

mainGame:AddToggle({
    text = "Auto PvP",
    flag = "AutoPvP",
    callback = function(state)
        if state then
            task.spawn(function()
                while library.flags["AutoPvP"] do
                    local r = game.ReplicatedStorage.Remotes.Events
                    local targetName = library.flags["PvPTarget"]
                    if targetName and targetName ~= "" then
                        r.WinEvent_PVP:FireServer(targetName, true, true)
                    end
                    task.wait(10820)
                end
            end)
        end
    end
})

local dropdownRef
dropdownRef = mainGame:AddList({
    text = "Select PvP Target",
    values = playerNames,
    flag = "PvPTarget",
    value = playerNames[1] or ""
})

mainGame:AddButton({
    text = "Refresh Players",
    callback = function()
        playerNames = getPlayerNames()
        if dropdownRef then
            dropdownRef.values = playerNames
            dropdownRef:SetValue(playerNames[1] or "")
        end
    end
})

-- Quest Completer
mainGame:AddButton({
    text = "Complete Quests",
    callback = function()
        local remotes = game:GetService("ReplicatedStorage").Remotes.Events

        remotes.RemoveC:FireServer(1)
        task.wait()
        remotes.WorldWheelEvent:FireServer("5")
        remotes.OnStandartShopRequest:FireServer("Buy", 2, 3)
        remotes.OnStandartShopRequest:FireServer("Buy", 2, 1)
        task.wait()
        remotes.PortalC:FireServer("1", true)
        task.wait(1)
        remotes.PortalC:FireServer("2", true)
        task.wait(1)
        remotes.PortalC:FireServer("1", true)
        task.wait(1)
        remotes.PortalC:FireServer("2", true)
        task.wait(1)
        remotes.PortalC:FireServer("1", true)
        task.wait(1)
        remotes.PortalC:FireServer("2", true)
        task.wait(2)
        for i = 1, 10 do
            remotes.WinEvent:FireServer("5")
            task.wait(2)
        end
        task.wait(2)
        for i = 1, 25 do
            remotes.WinBossEvent:FireServer("Boss1")
            task.wait(0.1)
        end
        remotes.RemoveC:FireServer(0)

        task.wait(120)
        local dailyArgs = {
            {"Daily", "UseOnSideSystem"},
            {"Daily", "Defeat10Enemies"},
            {"Daily", "Pull10Swords"},
            {"Daily", "Click1000Times"},
            {"Daily", "Win20MillionPower"},
            {"Daily", "GoTo5Worlds"},
            {"Daily", "PlayFor60Minutes"},
            {"Daily", "BuyItemsAtStore"},
            {"Daily", "Complete10Quests"},
        }
        for _, args in ipairs(dailyArgs) do
            remotes.ClaimQuest:FireServer(unpack(args))
            task.wait(0.5)
        end
    end
})

-- Anti AFK / Anti Lag
mainGame:AddButton({
    text = "Antiafk & Antilag",
    callback = function()
        game:GetService('Players').LocalPlayer.Idled:Connect(function()
            game:GetService('VirtualUser'):CaptureController()
            game:GetService('VirtualUser'):ClickButton2(Vector2.new())
        end)
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        t.WaterWaveSize, t.WaterWaveSpeed, t.WaterReflectance, t.WaterTransparency = 0,0,0,0
        l.GlobalShadows, l.FogEnd, l.Brightness = false, 9e9, 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material, v.Reflectance = "Plastic", 0
            elseif v:IsA("Decal") or v:IsA("Texture") then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure, v.BlastRadius = 1,1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material, v.Reflectance, v.TextureID = "Plastic", 0, ""
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end
})

--------------------------------------------------
-- BOSSES
--------------------------------------------------

-- Info Label above Generate Crystals
bossTab:AddLabel({
    text = "TP Lab/Ocean = Crystals.",
    type = "label"
})

bossTab:AddToggle({
    text = "Generate Crystals",
    flag = "GenCrystals",
    callback = function(state)
        local r = game.ReplicatedStorage.Remotes.Events
        if state then
            r.RemoveC:FireServer(1)
            task.spawn(function()
                while library.flags["GenCrystals"] do
                    for i=1,20 do
                        r.WinMegaBossEvent:FireServer("Dragon6", "Chaos")
                    end
                    task.wait()
                end
            end)
        else
            r.RemoveC:FireServer(0)
        end
    end
})

bossTab:AddToggle({
    text = "Spin Crystal Wheels",
    flag = "SpinWheel",
    callback = function(state)
        if state then
            task.spawn(function()
                while library.flags["SpinWheel"] do
                    local r = game.ReplicatedStorage.Remotes.Events
                    r.WorldWheelEvent:FireServer("5")
                    r.SpinWheelSecret:FireServer("-8", "563")
                    r.WorldWheelEvent:FireServer("6")
                    task.wait(1)
                end
            end)
        end
    end
})

bossTab:AddToggle({
    text = "Kill Title Boss",
    flag = "KillBoss",
    callback = function(state)
        local r = game.ReplicatedStorage.Remotes.Events
        if state then
            r.RemoveC:FireServer(1)
            task.wait(0.1)
            local bossMap = {
                ["The King"]="Boss1",["Dravenar"]="Boss2",["Glacius"]="Boss3",["Anubis"]="Boss4",
                ["Bossbot"]="Boss5",["Lazyfish"]="Boss6",["Yokai"]="Boss7",["Vort3x"]="Boss8",
                ["Underlord"]="Boss9",["The Conquerer"]="Boss10",
            }
            local chosen = bossMap[library.flags["BossTarget"]] or "Boss1"
            task.spawn(function()
                while library.flags["KillBoss"] do
                    r.WinBossEvent:FireServer(chosen)
                    task.wait(0.2)
                end
            end)
        else
            r.RemoveC:FireServer(0)
        end
    end
})

bossTab:AddList({
    text = "Select Boss",
    values = {"The King","Dravenar","Glacius","Anubis","Bossbot","Lazyfish","Yokai","Vort3x","Underlord","The Conquerer"},
    flag = "BossTarget",
    value = "The King"
})

--------------------------------------------------
-- WORLDS / SECRET WORLDS
--------------------------------------------------
local worldOptions = {
    {name="Castle",args={"2",true}}, {name="Volcano Cave",args={"1",true}},
    {name="Glacier Peaks",args={"3",true}}, {name="Desert Island",args={"5",true}},
    {name="The Lab",args={"7",true}}, {name="Ocean",args={"9",true}},
    {name="Temple",args={"11",true}}, {name="Arcade",args={"13",true}},
    {name="Underworld",args={"15",true}}, {name="Darkstar",args={"17",true}},
    {name="Nyxra Place",args={"-6",false}}, {name="Anubis",args={"-8",false}},
    {name="Viridian",args={"-14",false}}, {name="Ultra Prime",args={"-10",false}},
}

worldTab:AddButton({
    text = "TP to World",
    callback = function()
        local selected = library.flags["WorldTarget"]
        for _, opt in ipairs(worldOptions) do
            if opt.name == selected then
                game.ReplicatedStorage.Remotes.Events.PortalC:FireServer(unpack(opt.args))
                break
            end
        end
    end
})

local secretBossOptions = {
    {name="Nyxra",dragon="Dragon-3"},
    {name="RaZar",dragon="Dragon-4"},
    {name="Viridian",dragon="Dragon-5"},
    {name="Ultra Prime",dragon="Dragon-8"},
}
local difficultyOptions = {"Normal","Hard","Chaos"}

worldTab:AddToggle({
    text = "Kill Secret Boss",
    flag = "KillSecretBoss",
    callback = function(state)
        local remotes = game.ReplicatedStorage.Remotes.Events
        if state then
            local boss=nil
            for _, b in ipairs(secretBossOptions) do
                if library.flags["SecretBossTarget"]==b.name then boss=b.dragon break end
            end
            local difficulty = library.flags["SecretBossDifficulty"]
            if boss and difficulty then
                remotes.RemoveC:FireServer(1)
                task.wait(0.2)
                task.spawn(function()
                    while library.flags["KillSecretBoss"] do
                        remotes.WinMegaBossEvent:FireServer(boss,difficulty)
                        task.wait(0.2)
                    end
                end)
            end
        else remotes.RemoveC:FireServer(0) end
    end
})

worldTab:AddList({
    text="Select World",
    values=(function() local t={} for _,o in ipairs(worldOptions)do table.insert(t,o.name)end return t end)(),
    flag="WorldTarget", value=worldOptions[1].name
})

worldTab:AddList({
    text="Select Which Boss",
    values=(function() local t={} for _,b in ipairs(secretBossOptions)do table.insert(t,b.name)end return t end)(),
    flag="SecretBossTarget", value=secretBossOptions[1].name
})

worldTab:AddList({
    text="Difficulty",
    values=difficultyOptions,
    flag="SecretBossDifficulty",
    value=difficultyOptions[1]
})

eventTab:AddToggle({
    text="TP Commander",
    flag="TPCommander",
    callback=function(state)
        local r = game.ReplicatedStorage.Remotes.Events.PortalC
        if state then
            r:FireServer("-234", false)
            task.spawn(function()
                local h = (game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")
                local pos = Vector3.new(4758, 538, -1768)
                while library.flags["TPCommander"] do
                    h.CFrame = CFrame.new(pos)
                    task.wait()
                end
            end)
        end
    end
})

eventTab:AddToggle({
    text="TP Skellyy",
    flag="TPSkelly",
    callback=function(state)
        local r = game.ReplicatedStorage.Remotes.Events.PortalC
        if state then
            r:FireServer("-234", false)
            task.spawn(function()
                local h = (game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")
                local pos1 = Vector3.new(4807, 538, -1800)
                local pos2 = Vector3.new(4804, 538, -1804)
                local toggle = true
                while library.flags["TPSkelly"] do
                    if toggle then
                        h.CFrame = CFrame.new(pos1)
                    else
                        h.CFrame = CFrame.new(pos2)
                    end
                    toggle = not toggle
                    task.wait(0.6)
                end
            end)
        end
    end
})



eventTab:AddToggle({
    text="Attack Aura",
    flag="AttackAura",
    callback=function(state)
        if state then
            task.spawn(function()
                while library.flags["AttackAura"] do
                    game:GetService("ReplicatedStorage")
                        :WaitForChild("Remotes")
                        :WaitForChild("Events")
                        :WaitForChild("OnAttackMob")
                        :FireServer()
                    task.wait()
                end
            end)
        end
    end
})


--------------------------------------------------
-- INIT WINDOWS
--------------------------------------------------
library:Init()
