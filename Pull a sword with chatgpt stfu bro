local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local Tab1 = Library:NewWindow("Pull A Sword")
local Tab1Section1 = Tab1:NewSection("Tab1")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local Events = Remotes:WaitForChild("Events")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local fireDelay = 0.001
local toggles = {
    autoDungeonClick = false,
    dungeonClickV2 = false,
    autoClickEvent = false,
    generateInvites = false
}

local function getHumanoid()
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    return character:FindFirstChildOfClass("Humanoid")
end

Tab1Section1:CreateToggle("Auto Dungeon Click", function(state)
    toggles.autoDungeonClick = state
    if state then
        task.spawn(function()
            while toggles.autoDungeonClick do
                Events:WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
                task.wait(fireDelay)
            end
        end)
    end
end)

Tab1Section1:CreateToggle("Dungeon Click V2", function(state)
    toggles.dungeonClickV2 = state
    if state then
        task.spawn(function()
            while toggles.dungeonClickV2 do
                for i = 1, 5 do
                    Events:WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
                end
                task.wait()
            end
        end)
    end
end)

Tab1Section1:CreateToggle("Auto Click Event", function(state)
    toggles.autoClickEvent = state
    if state then
        task.spawn(function()
            while toggles.autoClickEvent do
                Events:WaitForChild("ClickEvent"):FireServer()
                task.wait()
            end
        end)
    end
end)

Tab1Section1:CreateToggle("Generate Invites", function(state)
    toggles.generateInvites = state

    local removeC = Events:WaitForChild("RemoveC")
    removeC:FireServer(state and 1 or 0)

    if state then
        task.spawn(function()
            while toggles.generateInvites do
                for _, boss in ipairs({"Dragon5", "Dragon6"}) do
                    for i = 1, 10 do
                        Events:WaitForChild("WinMegaBossEvent"):FireServer(boss, "Chaos")
                        task.wait()
                    end
                end
            end
        end)
    end
end)

Tab1Section1:CreateTextbox("Train/Attack Delay", function(text)
    local num = tonumber(text)
    if num and num > 0 then
        fireDelay = num
    end
end)

Tab1Section1:CreateButton("WalkSpeed 75", function()
    local humanoid = getHumanoid()
    if humanoid then
        humanoid.WalkSpeed = 75
    end
end)

Tab1Section1:CreateButton("Load Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

Tab1Section1:CreateButton("HHeight 12", function()
    local humanoid = getHumanoid()
    if humanoid then
        humanoid.HipHeight = 12
    end
end)

Tab1Section1:CreateButton("HHeight 1", function()
    local humanoid = getHumanoid()
    if humanoid then
        humanoid.HipHeight = 1
    end
end)

Tab1Section1:CreateButton("Antilag", function()
    local Terrain = Workspace:FindFirstChildOfClass('Terrain')
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 0
    end
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    settings().Rendering.QualityLevel = 1

    for _, v in ipairs(game:GetDescendants()) do
        if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = Enum.Material.Plastic
            v.Reflectance = 0
        elseif v:IsA("Decal") then
            v.
